{"ast":null,"code":"var _jsxFileName = \"/Users/aliatroitskaia/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setIsSelectedCard] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(data => {\n      console.log(card);\n      cards.filter(item => item._id !== card._id);\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setIsSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsSelectedCard(false);\n  }\n\n  function handleUpdateUser(prof) {\n    api.editProfileInfo(prof).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(ava) {\n    api.updateAvatar(ava.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlace(item) {\n    api.createCard(item).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getProfileInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bSWQNrdFd8lBbUKzn5NfNheDIqk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aliatroitskaia/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","ImagePopup","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","CurrentUserContext","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setIsSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","getInitialCards","then","data","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","removeCard","filter","item","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","prof","editProfileInfo","info","handleUpdateAvatar","ava","updateAvatar","avatar","handleAddPlace","createCard","getProfileInfo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setIsSelectedCard] = React.useState([])\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    React.useEffect(() => {\n        api.getInitialCards()\n        .then((data) => {\n            setCards(data)\n        })\n        .catch(err => console.log(err));\n    }, [])\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n    function handleCardDelete(card) {\n        \n        api.removeCard(card._id)\n        .then((data) => {\n            console.log(card)\n            cards.filter(item => item._id !== card._id)\n        })\n    }\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setIsSelectedCard(card)\n    }\n    function closeAllPopups () {\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setIsEditAvatarPopupOpen(false)\n        setIsSelectedCard(false)\n    } \n    function handleUpdateUser(prof) {\n        api.editProfileInfo(prof)\n        .then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleUpdateAvatar(ava) {\n        api.updateAvatar(ava.avatar)\n        .then((data) => {\n            setCurrentUser(data);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleAddPlace(item) {\n        api.createCard(item)\n        .then((newCard) => {\n            setCards([newCard, ...cards])\n            closeAllPopups()\n        })\n        .catch(err => console.log(err));\n    }\n    React.useEffect(() => {\n        api.getProfileInfo()\n        .then((data) => {\n            setCurrentUser(data)\n        })\n        .catch(err => console.log(err));\n    }, [])\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n            <Header />\n            <Main cards = {cards} onCardLike = {handleCardLike} onCardDelete = {handleCardDelete} onEditProfile = {handleEditProfileClick} onAddPlace = {handleAddPlaceClick} onEditAvatar = {handleEditAvatarClick} onCardClick = {handleCardClick} />\n            <Footer />\n            <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser = {handleUpdateUser} /> \n            <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace = {handleAddPlace} />\n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar = {handleUpdateAvatar} />\n            <ImagePopup card = {selectedCard} onClose = {closeAllPopups} />\n        </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}