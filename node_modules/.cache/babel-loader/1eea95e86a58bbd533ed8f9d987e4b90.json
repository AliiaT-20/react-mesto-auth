{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.url = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _check(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getProfileInfo() {\n    return fetch(this.url + '/users/me', {\n      headers: this.headers\n    }).then(res => this._check(res));\n  }\n\n  getInitialCards() {\n    return fetch(this.url + '/cards', {\n      headers: this.headers\n    }).then(res => this._check(res));\n  }\n\n  editProfileInfo(info) {\n    return fetch(this.url + '/users/me', {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: info.name,\n        about: info.about\n      })\n    }).then(res => this._check(res));\n  }\n\n  createCard(card) {\n    return fetch(this.url + '/cards', {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(res => this._check(res));\n  }\n\n  removeCard(id) {\n    return fetch(`${this.url + '/cards'}/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._check(res));\n  }\n\n  addLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(res => this._check(res));\n  }\n\n  deleteLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._check(res));\n  }\n\n  changeLikeCardStatus(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(res => this._check(res));\n  }\n\n  updateAvatar(link) {\n    return fetch(this.url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(res => this._check(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\n  headers: {\n    authorization: '2eb4d3bb-6397-4fac-946b-506829848b31',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/aliatroitskaia/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","url","baseUrl","headers","_check","res","ok","json","Promise","reject","status","getProfileInfo","fetch","then","getInitialCards","editProfileInfo","info","method","body","JSON","stringify","name","about","createCard","card","link","removeCard","id","addLike","deleteLike","changeLikeCardStatus","updateAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this.url = options.baseUrl;\n    this.headers =  options.headers;\n  }\n  _check(res) {\n    if (res.ok) {\n        return res.json()\n    }\n       return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getProfileInfo() {\n    return fetch(this.url + '/users/me', {\n        headers: this.headers\n    })\n    .then(res => this._check(res))\n  }\n\n  getInitialCards() {\n    return fetch(this.url + '/cards', {\n        headers: this.headers})\n        .then(res => this._check(res))\n  }\n\n  editProfileInfo(info) {\n      return fetch(this.url + '/users/me', {\n          method: \"PATCH\",\n          headers: this.headers,\n          body: JSON.stringify({\n            name: info.name,\n            about: info.about\n        })\n      })\n      .then(res => this._check(res))\n  }\n\ncreateCard(card) {\n    return fetch(this.url + '/cards', {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n            name: card.name,\n            link: card.link\n        })\n    })\n    .then(res => this._check(res))\n}\n\nremoveCard(id) {\n    return fetch(`${this.url + '/cards'}/${id}`, {\n        method: 'DELETE',\n        headers: this.headers,\n    })\n    .then(res => this._check(res))\n}\n\naddLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n        method: 'PUT',\n        headers: this.headers,\n    })\n    .then(res => this._check(res))\n}\n\ndeleteLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n        method: 'DELETE',\n        headers: this.headers,\n    })\n    .then(res => this._check(res))\n}\n\nchangeLikeCardStatus(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n        method: 'PUT',\n        headers: this.headers,\n    })\n    .then(res => this._check(res))\n}\n\nupdateAvatar(link) {\n    return fetch(this.url + '/users/me/avatar', {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n            avatar: link,\n        })\n    })\n    .then(res => this._check(res))\n}\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\n    headers: {\n        authorization: '2eb4d3bb-6397-4fac-946b-506829848b31',\n        'Content-Type': 'application/json'\n    }\n})\n\nexport default api;"]},"metadata":{},"sourceType":"module"}