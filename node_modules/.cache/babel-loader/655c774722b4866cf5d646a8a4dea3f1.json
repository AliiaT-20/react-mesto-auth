{"ast":null,"code":"var _jsxFileName = \"/Users/aliatroitskaia/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from '../auth.js';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const {\n    userEmail,\n    setUserEmail\n  } = React.useState('');\n\n  function handleLogin(e) {\n    e.preventDefault();\n    setLoggedIn({\n      loggedIn: true\n    });\n  }\n\n  function tokenCheck() {\n    // если у пользователя есть токен в localStorage, \n    // эта функция проверит, действующий он или нет\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n\n      if (jwt) {\n        // проверим токен\n        auth.getContent(jwt).then(res => {\n          if (res) {\n            const usermail = res.data.email;\n            setUserEmail(usermail); // авторизуем пользователя\n\n            setLoggedIn({\n              loggedIn: true\n            }); // обернём App.js в withRouter\n            // так, что теперь есть доступ к этому методу\n\n            history.push(\"/\");\n          }\n        });\n      }\n    }\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(data => {\n      setCards(cards => cards.filter(item => item._id !== card._id));\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(userInfo) {\n    api.editProfileInfo(userInfo).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(ava) {\n    api.updateAvatar(ava.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlace(item) {\n    api.createCard(item).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    tokenCheck();\n    console.log(userEmail);\n  }, []);\n  React.useEffect(() => {\n    api.getProfileInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => console.log(err));\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"cont\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: loggedIn,\n            component: Main,\n            email: userEmail,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"ycLAhDhX8YGZVhO7dzM/bdyjjJc=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aliatroitskaia/dev/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","useHistory","Main","Footer","ImagePopup","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","CurrentUserContext","Register","ProtectedRoute","auth","App","history","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","userEmail","setUserEmail","handleLogin","e","preventDefault","tokenCheck","localStorage","getItem","jwt","getContent","then","res","usermail","data","email","push","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","removeCard","filter","item","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","userInfo","editProfileInfo","info","catch","err","console","log","handleUpdateAvatar","ava","updateAvatar","avatar","handleAddPlace","createCard","useEffect","getProfileInfo","getInitialCards"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch,  useHistory } from 'react-router-dom';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from '../auth.js';\nimport '../index.css';\n\nfunction App() {\n    const history = useHistory();\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const {userEmail, setUserEmail} = React.useState('');\n    \n    function handleLogin(e) {\n        e.preventDefault();\n        setLoggedIn({\n            loggedIn: true\n        })\n    }\n\n    function tokenCheck () {\n        // если у пользователя есть токен в localStorage, \n        // эта функция проверит, действующий он или нет\n        if (localStorage.getItem('jwt')){\n          const jwt = localStorage.getItem('jwt');\n          if (jwt){\n            // проверим токен\n            auth.getContent(jwt).then((res) => {\n              if (res){\n                  const usermail = res.data.email;\n                setUserEmail(usermail);\n                        // авторизуем пользователя\n                setLoggedIn({\n                  loggedIn: true,\n                }); \n                            // обернём App.js в withRouter\n                            // так, что теперь есть доступ к этому методу\n                history.push(\"/\");\n              }\n            }); \n          }\n          \n        }\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n    function handleCardDelete(card) {\n        api.removeCard(card._id)\n        .then((data) => {\n            setCards((cards) => cards.filter(item => item._id !== card._id))\n        })\n    }\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n    function closeAllPopups () {\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setIsEditAvatarPopupOpen(false)\n        setSelectedCard({})\n    } \n    function handleUpdateUser(userInfo) {\n        api.editProfileInfo(userInfo)\n        .then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleUpdateAvatar(ava) {\n        api.updateAvatar(ava.avatar)\n        .then((data) => {\n            setCurrentUser(data);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleAddPlace(item) {\n        api.createCard(item)\n        .then((newCard) => {\n            setCards([newCard, ...cards])\n            closeAllPopups()\n        })\n        .catch(err => console.log(err));\n    }\n    React.useEffect(() => {\n        tokenCheck()\n        console.log(userEmail)\n    }, [])\n    React.useEffect(() => {\n        api.getProfileInfo()\n        .then((data) => {\n            setCurrentUser(data)\n        })\n        .catch(err => console.log(err));\n        api.getInitialCards()\n        .then((data) => {\n            setCards(data)\n        })\n        .catch(err => console.log(err));\n    }, [])\n  return (\n          <CurrentUserContext.Provider value={currentUser}>\n                <div className=\"page\">\n                <main className=\"cont\">\n                        <Switch>\n                            <Route path=\"/sign-up\">\n                                <Register />\n                            </Route>\n                            <Route path=\"/sign-in\">\n                                <Login handleLogin = {handleLogin} />\n                            </Route>\n                            <ProtectedRoute\n                                path=\"/\"\n                                loggedIn={loggedIn}\n                                component={Main}\n                                email = {userEmail}\n                                cards = {cards} \n                                onCardLike = {handleCardLike} \n                                onCardDelete = {handleCardDelete} \n                                onEditProfile = {handleEditProfileClick} \n                                onAddPlace = {handleAddPlaceClick} \n                                onEditAvatar = {handleEditAvatarClick} \n                                onCardClick = {handleCardClick} \n                            />\n                        </Switch>\n                    <Footer />\n                    <EditProfilePopup \n                        isOpen={isEditProfilePopupOpen} \n                        onClose={closeAllPopups} \n                        onUpdateUser = {handleUpdateUser} \n                    /> \n                    <AddPlacePopup \n                        isOpen={isAddPlacePopupOpen} \n                        onClose={closeAllPopups} \n                        onAddPlace = {handleAddPlace} \n                    />\n                    <EditAvatarPopup \n                        isOpen={isEditAvatarPopupOpen} \n                        onClose={closeAllPopups} \n                        onUpdateAvatar = {handleUpdateAvatar} \n                    />\n                    <ImagePopup card = {selectedCard} onClose = {closeAllPopups} />\n                </main>\n            </div>\n        </CurrentUserContext.Provider>\n      \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}