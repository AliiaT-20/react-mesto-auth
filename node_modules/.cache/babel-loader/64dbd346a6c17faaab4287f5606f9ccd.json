{"ast":null,"code":"var _jsxFileName = \"/Users/aliatroitskaia/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport success from \"../images/success.svg\";\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  function handleLogin(e) {\n    e.preventDefault();\n    setLoggedIn({\n      loggedIn: true\n    });\n  }\n\n  function tokenCheck() {\n    // если у пользователя есть токен в localStorage, \n    // эта функция проверит, действующий он или нет\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt'); // здесь будем проверять токен\n    }\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(data => {\n      setCards(cards => cards.filter(item => item._id !== card._id));\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(userInfo) {\n    api.editProfileInfo(userInfo).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(ava) {\n    api.updateAvatar(ava.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlace(item) {\n    api.createCard(item).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    api.getProfileInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => console.log(err));\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"cont\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: loggedIn,\n            component: Main,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"UP2QSnk/VP48IVf1KVvdvkfF5kY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/aliatroitskaia/dev/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","Header","Main","Footer","ImagePopup","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","CurrentUserContext","Register","ProtectedRoute","InfoTooltip","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","handleLogin","e","preventDefault","tokenCheck","localStorage","getItem","jwt","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","handleCardDelete","removeCard","data","filter","item","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","userInfo","editProfileInfo","info","catch","err","console","log","handleUpdateAvatar","ava","updateAvatar","avatar","handleAddPlace","createCard","useEffect","getProfileInfo","getInitialCards"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,kBAAR,QAAiC,gCAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,cAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAA5D;AACA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDtB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAAtD;AACA,QAAM,CAACG,qBAAD,EAAwBC,wBAAxB,IAAoDxB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAA1D;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkC1B,KAAK,CAACoB,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgC5B,KAAK,CAACoB,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAACoB,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BhC,KAAK,CAACoB,QAAN,CAAe,KAAf,CAAhC;;AAEA,WAASa,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAAC;AACRD,MAAAA,QAAQ,EAAE;AADF,KAAD,CAAX;AAGH;;AAED,WAASK,UAAT,GAAuB;AACnB;AACA;AACA,QAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAgC;AAC9B,YAAMC,GAAG,GAAGF,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ,CAD8B,CAE9B;AAED;AACJ;;AAED,WAASE,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUnB,WAAW,CAACmB,GAA3C,CAAhB;AACAtC,IAAAA,GAAG,CAACuC,oBAAJ,CAAyBN,IAAI,CAACK,GAA9B,EAAmC,CAACJ,OAApC,EAA6CM,IAA7C,CAAmDC,OAAD,IAAa;AAC3DnB,MAAAA,QAAQ,CAAEoB,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAOA,CAAC,CAACN,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBG,OAArB,GAA+BG,CAAhD,CAAZ,CAAR;AACH,KAFD;AAGH;;AACD,WAASC,gBAAT,CAA0BZ,IAA1B,EAAgC;AAC5BjC,IAAAA,GAAG,CAAC8C,UAAJ,CAAeb,IAAI,CAACK,GAApB,EACCE,IADD,CACOO,IAAD,IAAU;AACZzB,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,CAAC2B,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACX,GAAL,KAAaL,IAAI,CAACK,GAAvC,CAAZ,CAAR;AACH,KAHD;AAIH;;AACD,WAASY,qBAAT,GAAiC;AAC7BlC,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACH;;AAED,WAASmC,sBAAT,GAAkC;AAC9BxC,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH;;AAED,WAASyC,mBAAT,GAA+B;AAC3BtC,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH;;AAED,WAASuC,eAAT,CAAyBpB,IAAzB,EAA+B;AAC3Bf,IAAAA,eAAe,CAACe,IAAD,CAAf;AACH;;AACD,WAASqB,cAAT,GAA2B;AACvB3C,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAG,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACH;;AACD,WAASqC,gBAAT,CAA0BC,QAA1B,EAAoC;AAChCxD,IAAAA,GAAG,CAACyD,eAAJ,CAAoBD,QAApB,EACChB,IADD,CACOkB,IAAD,IAAU;AACZtC,MAAAA,cAAc,CAACsC,IAAD,CAAd;AACAJ,MAAAA,cAAc;AACjB,KAJD,EAKCK,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMH;;AACD,WAASG,kBAAT,CAA4BC,GAA5B,EAAiC;AAC7BhE,IAAAA,GAAG,CAACiE,YAAJ,CAAiBD,GAAG,CAACE,MAArB,EACC1B,IADD,CACOO,IAAD,IAAU;AACZ3B,MAAAA,cAAc,CAAC2B,IAAD,CAAd;AACAO,MAAAA,cAAc;AACjB,KAJD,EAKCK,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMH;;AACD,WAASO,cAAT,CAAwBlB,IAAxB,EAA8B;AAC1BjD,IAAAA,GAAG,CAACoE,UAAJ,CAAenB,IAAf,EACCT,IADD,CACOC,OAAD,IAAa;AACfnB,MAAAA,QAAQ,CAAC,CAACmB,OAAD,EAAU,GAAGpB,KAAb,CAAD,CAAR;AACAiC,MAAAA,cAAc;AACjB,KAJD,EAKCK,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMH;;AACDpE,EAAAA,KAAK,CAAC6E,SAAN,CAAgB,MAAM;AAClBrE,IAAAA,GAAG,CAACsE,cAAJ,GACC9B,IADD,CACOO,IAAD,IAAU;AACZ3B,MAAAA,cAAc,CAAC2B,IAAD,CAAd;AACH,KAHD,EAICY,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;AAKA5D,IAAAA,GAAG,CAACuE,eAAJ,GACC/B,IADD,CACOO,IAAD,IAAU;AACZzB,MAAAA,QAAQ,CAACyB,IAAD,CAAR;AACH,KAHD,EAICY,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;AAKH,GAXD,EAWG,EAXH;AAYF,sBACQ,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEzC,WAApC;AAAA,2BACM;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACA;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACQ,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA,mCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAA,mCACI,QAAC,KAAD;AAAO,cAAA,WAAW,EAAIM;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI,QAAC,cAAD;AACI,YAAA,IAAI,EAAC,GADT;AAEI,YAAA,QAAQ,EAAEF,QAFd;AAGI,YAAA,SAAS,EAAE1B,IAHf;AAII,YAAA,KAAK,EAAIwB,KAJb;AAKI,YAAA,UAAU,EAAIW,cALlB;AAMI,YAAA,YAAY,EAAIa,gBANpB;AAOI,YAAA,aAAa,EAAIM,sBAPrB;AAQI,YAAA,UAAU,EAAIC,mBARlB;AASI,YAAA,YAAY,EAAIF,qBATpB;AAUI,YAAA,WAAW,EAAIG;AAVnB;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAqBI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAsBI,QAAC,gBAAD;AACI,UAAA,MAAM,EAAE3C,sBADZ;AAEI,UAAA,OAAO,EAAE4C,cAFb;AAGI,UAAA,YAAY,EAAIC;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAtBJ,eA2BI,QAAC,aAAD;AACI,UAAA,MAAM,EAAE1C,mBADZ;AAEI,UAAA,OAAO,EAAEyC,cAFb;AAGI,UAAA,UAAU,EAAIa;AAHlB;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eAgCI,QAAC,eAAD;AACI,UAAA,MAAM,EAAEpD,qBADZ;AAEI,UAAA,OAAO,EAAEuC,cAFb;AAGI,UAAA,cAAc,EAAIS;AAHtB;AAAA;AAAA;AAAA;AAAA,gBAhCJ,eAqCI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAI9C,YAApB;AAAkC,UAAA,OAAO,EAAIqC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADR;AA8CD;;GA7IQ7C,G;;KAAAA,G;AA+IT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport success from '../images/success.svg';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport '../index.css';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    \n    function handleLogin(e) {\n        e.preventDefault();\n        setLoggedIn({\n            loggedIn: true\n        })\n    }\n\n    function tokenCheck () {\n        // если у пользователя есть токен в localStorage, \n        // эта функция проверит, действующий он или нет\n        if (localStorage.getItem('jwt')){\n          const jwt = localStorage.getItem('jwt');\n          // здесь будем проверять токен\n          \n        }\n    }\n    \n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n    function handleCardDelete(card) {\n        api.removeCard(card._id)\n        .then((data) => {\n            setCards((cards) => cards.filter(item => item._id !== card._id))\n        })\n    }\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n    function closeAllPopups () {\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setIsEditAvatarPopupOpen(false)\n        setSelectedCard({})\n    } \n    function handleUpdateUser(userInfo) {\n        api.editProfileInfo(userInfo)\n        .then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleUpdateAvatar(ava) {\n        api.updateAvatar(ava.avatar)\n        .then((data) => {\n            setCurrentUser(data);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleAddPlace(item) {\n        api.createCard(item)\n        .then((newCard) => {\n            setCards([newCard, ...cards])\n            closeAllPopups()\n        })\n        .catch(err => console.log(err));\n    }\n    React.useEffect(() => {\n        api.getProfileInfo()\n        .then((data) => {\n            setCurrentUser(data)\n        })\n        .catch(err => console.log(err));\n        api.getInitialCards()\n        .then((data) => {\n            setCards(data)\n        })\n        .catch(err => console.log(err));\n    }, [])\n  return (\n          <CurrentUserContext.Provider value={currentUser}>\n                <div className=\"page\">\n                <main className=\"cont\">\n                        <Switch>\n                            <Route path=\"/sign-up\">\n                                <Register />\n                            </Route>\n                            <Route path=\"/sign-in\">\n                                <Login handleLogin = {handleLogin} />\n                            </Route>\n                            <ProtectedRoute\n                                path=\"/\"\n                                loggedIn={loggedIn}\n                                component={Main}\n                                cards = {cards} \n                                onCardLike = {handleCardLike} \n                                onCardDelete = {handleCardDelete} \n                                onEditProfile = {handleEditProfileClick} \n                                onAddPlace = {handleAddPlaceClick} \n                                onEditAvatar = {handleEditAvatarClick} \n                                onCardClick = {handleCardClick} \n                            />\n                        </Switch>\n                    <Footer />\n                    <EditProfilePopup \n                        isOpen={isEditProfilePopupOpen} \n                        onClose={closeAllPopups} \n                        onUpdateUser = {handleUpdateUser} \n                    /> \n                    <AddPlacePopup \n                        isOpen={isAddPlacePopupOpen} \n                        onClose={closeAllPopups} \n                        onAddPlace = {handleAddPlace} \n                    />\n                    <EditAvatarPopup \n                        isOpen={isEditAvatarPopupOpen} \n                        onClose={closeAllPopups} \n                        onUpdateAvatar = {handleUpdateAvatar} \n                    />\n                    <ImagePopup card = {selectedCard} onClose = {closeAllPopups} />\n                </main>\n            </div>\n        </CurrentUserContext.Provider>\n      \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}