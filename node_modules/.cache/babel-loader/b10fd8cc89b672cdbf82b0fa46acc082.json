{"ast":null,"code":"var _jsxFileName = \"/Users/aliatroitskaia/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport success from \"../images/success.svg\";\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../auth.js';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  function handleLogin(e) {\n    e.preventDefault();\n    setLoggedIn({\n      loggedIn: true\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(data => {\n      setCards(cards => cards.filter(item => item._id !== card._id));\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  function handleUpdateUser(userInfo) {\n    api.editProfileInfo(userInfo).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(ava) {\n    api.updateAvatar(ava.avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleAddPlace(item) {\n    api.createCard(item).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  React.useEffect(() => {\n    setLoggedIn(true);\n  });\n  React.useEffect(() => {\n    // если у пользователя есть токен в localStorage, \n    // эта функция проверит, действующий он или нет\n    if (localStorage.getItem('jwt')) {\n      const jwt = localStorage.getItem('jwt');\n\n      if (jwt) {\n        // проверим токен\n        auth.getContent(jwt).then(res => {\n          if (res) {\n            // авторизуем пользователя\n            setLoggedIn({\n              loggedIn: true\n            }, () => {\n              // обернём App.js в withRouter\n              // так, что теперь есть доступ к этому методу\n              this.props.history.push(\"/ducks\");\n            });\n          }\n        });\n      }\n    }\n  }, []);\n  React.useEffect(() => {\n    api.getProfileInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => console.log(err));\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"cont\",\n        children: [/*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: loggedIn,\n            component: Main,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 11\n  }, this);\n}\n\n_s(App, \"DYuMyTlUdTg377xxHBQbtzqJ8XE=\");\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/aliatroitskaia/dev/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","withRouter","Header","Main","Footer","ImagePopup","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","CurrentUserContext","Register","ProtectedRoute","InfoTooltip","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","handleLogin","e","preventDefault","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","handleCardDelete","removeCard","data","filter","item","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups","handleUpdateUser","userInfo","editProfileInfo","info","catch","err","console","log","handleUpdateAvatar","ava","updateAvatar","avatar","handleAddPlace","createCard","useEffect","localStorage","getItem","jwt","getContent","res","props","history","push","getProfileInfo","getInitialCards"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport success from '../images/success.svg';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../auth.js';\nimport '../index.css';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    \n    function handleLogin(e) {\n        e.preventDefault();\n        setLoggedIn({\n            loggedIn: true\n        })\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n    function handleCardDelete(card) {\n        api.removeCard(card._id)\n        .then((data) => {\n            setCards((cards) => cards.filter(item => item._id !== card._id))\n        })\n    }\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true)\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n    function closeAllPopups () {\n        setIsEditProfilePopupOpen(false)\n        setIsAddPlacePopupOpen(false)\n        setIsEditAvatarPopupOpen(false)\n        setSelectedCard({})\n    } \n    function handleUpdateUser(userInfo) {\n        api.editProfileInfo(userInfo)\n        .then((info) => {\n            setCurrentUser(info);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleUpdateAvatar(ava) {\n        api.updateAvatar(ava.avatar)\n        .then((data) => {\n            setCurrentUser(data);\n            closeAllPopups();\n        })\n        .catch(err => console.log(err));\n    }\n    function handleAddPlace(item) {\n        api.createCard(item)\n        .then((newCard) => {\n            setCards([newCard, ...cards])\n            closeAllPopups()\n        })\n        .catch(err => console.log(err));\n    }\n    React.useEffect(() => {\n        setLoggedIn(true)\n    })\n    React.useEffect(() => {\n            // если у пользователя есть токен в localStorage, \n            // эта функция проверит, действующий он или нет\n            if (localStorage.getItem('jwt')){\n              const jwt = localStorage.getItem('jwt');\n              if (jwt){\n                // проверим токен\n                auth.getContent(jwt).then((res) => {\n                  if (res){\n                            // авторизуем пользователя\n                    setLoggedIn({\n                      loggedIn: true,\n                    }, () => {\n                                // обернём App.js в withRouter\n                                // так, что теперь есть доступ к этому методу\n                      this.props.history.push(\"/ducks\");\n                    });\n                  }\n                }); \n              }\n              \n            }\n        \n    }, [])\n    React.useEffect(() => {\n        api.getProfileInfo()\n        .then((data) => {\n            setCurrentUser(data)\n        })\n        .catch(err => console.log(err));\n        api.getInitialCards()\n        .then((data) => {\n            setCards(data)\n        })\n        .catch(err => console.log(err));\n    }, [])\n  return (\n          <CurrentUserContext.Provider value={currentUser}>\n                <div className=\"page\">\n                <main className=\"cont\">\n                        <Switch>\n                            <Route path=\"/sign-up\">\n                                <Register />\n                            </Route>\n                            <Route path=\"/sign-in\">\n                                <Login handleLogin = {handleLogin} />\n                            </Route>\n                            <ProtectedRoute\n                                path=\"/\"\n                                loggedIn={loggedIn}\n                                component={Main}\n                                cards = {cards} \n                                onCardLike = {handleCardLike} \n                                onCardDelete = {handleCardDelete} \n                                onEditProfile = {handleEditProfileClick} \n                                onAddPlace = {handleAddPlaceClick} \n                                onEditAvatar = {handleEditAvatarClick} \n                                onCardClick = {handleCardClick} \n                            />\n                        </Switch>\n                    <Footer />\n                    <EditProfilePopup \n                        isOpen={isEditProfilePopupOpen} \n                        onClose={closeAllPopups} \n                        onUpdateUser = {handleUpdateUser} \n                    /> \n                    <AddPlacePopup \n                        isOpen={isAddPlacePopupOpen} \n                        onClose={closeAllPopups} \n                        onAddPlace = {handleAddPlace} \n                    />\n                    <EditAvatarPopup \n                        isOpen={isEditAvatarPopupOpen} \n                        onClose={closeAllPopups} \n                        onUpdateAvatar = {handleUpdateAvatar} \n                    />\n                    <ImagePopup card = {selectedCard} onClose = {closeAllPopups} />\n                </main>\n            </div>\n        </CurrentUserContext.Provider>\n      \n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}