{"ast":null,"code":"var _jsxFileName = \"/Users/aliatroitskaia/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport editIcon from \"../images/edit-icon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [userName, setUserName] = React.useState();\n  const [userDescription, setUserDescription] = React.useState();\n  const [userAvatar, setUserAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    function renderInfo(name, description, avatar) {\n      setUserName(name);\n      setUserDescription(description);\n      setUserAvatar(avatar);\n    }\n\n    api.getProfileInfo().then(info => {\n      renderInfo(info.name, info.about, info.avatar);\n    }).catch(err => console.log(err));\n    api.getInitialCards().then(data => {\n      setCards(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            style: {\n              backgroundImage: `url(${userAvatar})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__wrap-edit\",\n            onClick: props.onEditAvatar,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: editIcon,\n              alt: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n              className: \"profile__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__text-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"profile__edit-button\",\n              type: \"button\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__about\",\n            children: userDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: props.onCardClick\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"YfYW1ZHYFTZ2A3cWBIuP4ZjTmt0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/aliatroitskaia/dev/mesto-react/src/components/Main.js"],"names":["React","api","Card","Main","props","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","renderInfo","name","description","avatar","getProfileInfo","then","info","about","catch","err","console","log","getInitialCards","data","backgroundImage","onEditAvatar","editIcon","onEditProfile","onAddPlace","map","card","onCardClick","_id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport editIcon from '../images/edit-icon.svg'\n\nfunction Main(props) {\n    const [userName, setUserName] = React.useState();\n    const [userDescription, setUserDescription] = React.useState();\n    const [userAvatar, setUserAvatar] = React.useState();\n    const [cards, setCards] = React.useState([]);\n    React.useEffect(() => {\n        function renderInfo(name, description, avatar) {\n            setUserName(name)\n            setUserDescription(description)\n            setUserAvatar(avatar)\n        }\n        api.getProfileInfo()\n        .then((info) => {\n            renderInfo(info.name, info.about, info.avatar)\n        })\n        .catch(err => console.log(err));\n        api.getInitialCards()\n        .then((data) => {\n            setCards(data)\n        })\n        .catch(err => console.log(err));\n    }, [])\n    return (\n        <main className=\"content\">\n                <section className=\"profile\">\n                    <div className=\"profile__info\">\n                        <div className=\"profile__avatar-block\">\n                            <div className=\"avatar\" style={{ backgroundImage: `url(${userAvatar})` }}></div>\n                            <div className=\"profile__wrap-edit\" onClick = {props.onEditAvatar}>\n                                <img src={editIcon} alt=\"Редактирование\" className=\"profile__icon\" />\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"profile__text-info\">\n                                <h1 className=\"profile__name\">{userName}</h1>\n                                <button className=\"profile__edit-button\" type=\"button\" onClick = {props.onEditProfile}></button>\n                            </div>\n                            <p className=\"profile__about\">{userDescription}</p>\n                        </div>\n                    </div>\n                    <button className=\"profile__add-button\" type=\"button\" onClick = {props.onAddPlace}></button>\n                </section>\n                <section className=\"elements\">\n                {cards.map((card) => {\n                        return (\n                            <Card card = {card} onCardClick = {props.onCardClick} key={card._id} />\n                        )\n                    })}\n                </section>\n            </main>\n    );\n  }\n  \n  export default Main;\n  "]},"metadata":{},"sourceType":"module"}